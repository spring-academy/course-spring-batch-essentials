apiVersion: training.educates.dev/v1beta1
kind: Workshop
metadata:
  name: spr-batch-initializr-workshop
spec:
  title: "Lab: Bootstrap the project"
  description: "This Lab bootstraps a Spring Batch project based on Spring Boot"
  workshop:
    image: jdk17-environment:*
    packages:
      - name: spring-academy-lab
        files:
          - image:
              url: ghcr.io/spring-academy/spring-academy-extension-packages/spring-academy-lab
              tagSelection:
                semver:
                  constraints: ">=1.0.0 <2.0.0"
    files:
      - image: # Note: format is {repository-name}-files
          url: $(image_repository)/course-spring-batch-essentials-files:$(workshop_version)
        includePaths:
          - /workshops/02-spring-initializr/workshop/**
        newRootPath: workshops/02-spring-initializr
      - path: .local/share/code-server
        image:
          url: ghcr.io/spring-academy/vscode-java-tools-$(platform_arch)-files:0.25.14
      - path: exercises
        git:
          url: https://github.com/spring-academy/course-spring-batch-essentials-code
          ref: main
        newRootPath: .
  request:
    parameters:
    - name: USER_DOMAIN
      value: "unknown.domain"
    - name: USER_EMAIL
      value: "somebody@unknown.domain"
  session:
    env:
      - name: LESSON_LABEL
        value: initializr-start
    namespaces:
      budget: medium
    resources:
      memory: 2Gi
    applications:
      terminal:
        enabled: true
        layout: default
      editor:
        enabled: true
      docker:
        enabled: true
        storage: 500Mi
        socket:
          # you must have this to enable docker ps, etc.
          enabled: true
        compose:
          services:
            postgres-workshop:
              image: postgres:14.1-alpine
              container_name: postgres
              ports:
                - "127.0.0.1:5432:5432"
              environment:
                - POSTGRES_USER=postgres
                - POSTGRES_PASSWORD=postgres
              volumes:
                - type: volume
                  source: workshop
                  target: /mnt
    dashboards:
      - name: Editor
      - name: Terminal
      - name: Spring Initializr
        url: "$(ingress_protocol)://initializr-$(session_namespace).$(ingress_domain)"
    ingresses:
      - name: initializr
        protocol: http
        host: initializr.$(workshop_namespace).svc.cluster.local
        port: 8080
  environment:
    objects:
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: initializr
          labels:
            app: initializr
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: initializr
          template:
            metadata:
              labels:
                app: initializr
            spec:
              containers:
                - name: dashboard
                  image: ghcr.io/vmware-tanzu-labs/educates-spring-initializr:2.0
                  imagePullPolicy: IfNotPresent
                  ports:
                    - name: 8080-tcp
                      containerPort: 8080
                      protocol: TCP
      - apiVersion: v1
        kind: Service
        metadata:
          name: initializr
          labels:
            app: initializr
        spec:
          type: ClusterIP
          selector:
            app: initializr
          ports:
            - name: 8080-tcp
              port: 8080
              targetPort: 8080
              protocol: TCP
